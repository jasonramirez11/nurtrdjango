# Generated by Django 5.0.4 on 2025-06-17 00:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('NurtrDjango', '0005_restructure_recommendations'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('event_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('start_date', models.CharField(blank=True, max_length=255, null=True)),
                ('when', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.JSONField(blank=True, default=list)),
                ('formatted_address', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('venue_name', models.CharField(blank=True, max_length=255, null=True)),
                ('venue_rating', models.FloatField(blank=True, null=True)),
                ('venue_reviews', models.IntegerField(blank=True, null=True)),
                ('link', models.URLField(blank=True, max_length=1024, null=True)),
                ('thumbnail', models.URLField(blank=True, max_length=1024, null=True)),
                ('image', models.URLField(blank=True, max_length=1024, null=True)),
                ('event_type', models.CharField(blank=True, max_length=100, null=True)),
                ('has_tickets', models.BooleanField(default=False)),
                ('ticket_info', models.JSONField(blank=True, default=list)),
                ('ticket_sources', models.JSONField(blank=True, default=list)),
                ('event_location_map', models.JSONField(blank=True, default=dict)),
                ('source', models.CharField(default='serp_api', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['title'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='userrecommendation',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='userrecommendation',
            name='recommendation_type',
            field=models.CharField(choices=[('places', 'Places'), ('events', 'Events')], default='places', max_length=10),
        ),
        migrations.AlterField(
            model_name='userrecommendation',
            name='recommended_places',
            field=models.ManyToManyField(blank=True, related_name='user_recommendations', through='NurtrDjango.UserRecommendationPlace', to='NurtrDjango.place'),
        ),
        migrations.AlterUniqueTogether(
            name='userrecommendation',
            unique_together={('user', 'date_generated', 'recommendation_type')},
        ),
        migrations.CreateModel(
            name='UserEventRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_generated', models.DateField(help_text='Date these event recommendations were generated')),
                ('user_profile_hash', models.CharField(help_text='Hash of user profile for cache invalidation', max_length=64)),
                ('custom_queries', models.JSONField(help_text='Generated search queries used')),
                ('locations_searched', models.JSONField(help_text='List of locations searched for these recommendations')),
                ('total_results', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_event_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Daily Event Recommendation',
                'verbose_name_plural': 'User Daily Event Recommendations',
                'ordering': ['-date_generated', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRecommendationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personalization_score', models.IntegerField(default=0, help_text="How well this event matches the user's profile")),
                ('searched_location', models.CharField(help_text='Which location search found this event', max_length=255)),
                ('source_query', models.TextField(help_text='Which search query found this event')),
                ('recommendation_rank', models.IntegerField(help_text='Rank of this event in the recommendation list (1=best)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NurtrDjango.event')),
                ('user_recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NurtrDjango.usereventrecommendation')),
            ],
            options={
                'verbose_name': 'User Recommendation Event',
                'verbose_name_plural': 'User Recommendation Events',
                'ordering': ['recommendation_rank'],
                'unique_together': {('user_recommendation', 'event')},
            },
        ),
        migrations.AddField(
            model_name='usereventrecommendation',
            name='recommended_events',
            field=models.ManyToManyField(related_name='user_recommendations', through='NurtrDjango.UserRecommendationEvent', to='NurtrDjango.event'),
        ),
        migrations.AlterUniqueTogether(
            name='usereventrecommendation',
            unique_together={('user', 'date_generated')},
        ),
    ]
